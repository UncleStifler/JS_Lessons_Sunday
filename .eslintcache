[{"/VALERA/it-incubator/js_lessons_sunday/src/index.tsx":"1","/VALERA/it-incubator/js_lessons_sunday/src/redux/state.ts":"2","/VALERA/it-incubator/js_lessons_sunday/src/App.tsx":"3","/VALERA/it-incubator/js_lessons_sunday/src/redux/currencyReducer.ts":"4","/VALERA/it-incubator/js_lessons_sunday/src/lessons/lesson5/lesson5.ts":"5"},{"size":319,"mtime":1609752860000,"results":"6","hashOfConfig":"7"},{"size":286,"mtime":1609751766000,"results":"8","hashOfConfig":"7"},{"size":619,"mtime":1640559015462,"results":"9","hashOfConfig":"7"},{"size":1088,"mtime":1609753971000,"results":"10","hashOfConfig":"7"},{"size":5618,"mtime":1640625178184,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nzr6ox",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/VALERA/it-incubator/js_lessons_sunday/src/index.tsx",[],["24","25"],"/VALERA/it-incubator/js_lessons_sunday/src/redux/state.ts",[],"/VALERA/it-incubator/js_lessons_sunday/src/App.tsx",[],"/VALERA/it-incubator/js_lessons_sunday/src/redux/currencyReducer.ts",[],"/VALERA/it-incubator/js_lessons_sunday/src/lessons/lesson5/lesson5.ts",["26","27","28","29","30"],"console.log('Lesson 5');\r\n\r\n// Keyword - this\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/this\r\n// https://learn.javascript.ru/object-methods\r\n// https://habr.com/ru/company/ruvds/blog/419371/\r\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&list=PLqKQF2ojwm3l4oPjsB9chrJmlhZ-zOzWT\r\n\r\n// А тут заходим и ставим лайк!!!\r\n// https://www.youtube.com/watch?v=T1vJ8OdJq0o\r\n\r\n// https://www.youtube.com/watch?v=xY-mwUzDjsk\r\n\r\n// Keyword - new. Function-constructor\r\n// https://learn.javascript.ru/constructor-new\r\n// https://metanit.com/web/javascript/4.5.php\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new\r\n\r\n// Call, Apply, Bind\r\n// https://learn.javascript.ru/call-apply-decorators\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0%D1%85-apply-call-%D0%B8-bind-%D0%BD%D0%B5%D0%BE%D0%B1%D1%85%D0%BE%D0%B4%D0%B8%D0%BC%D1%8B%D1%85-%D0%BA%D0%B0%D0%B6%D0%B4%D0%BE%D0%BC%D1%83-javascript-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D1%83-ddd5f9b06290\r\n\r\n\r\n// Task 01\r\n// Дан объект someObj, реализуйте функцию greeting и присвойте ее ключу объекта с аналогичным именем.\r\n// Функция должна вернуть строку `My name is ${name}. I am ${age}`, где name и age берутся из свойств объекта\r\n\r\ntype someObjType = {\r\n    name: string;\r\n    age: number;\r\n}\r\n\r\nlet someObj: someObjType = {\r\n    name: 'Eugene',\r\n    age: 32\r\n}\r\n\r\n// Task 02\r\n// реализовать счетчик counter в виде объекта со следующими методами:\r\n// get current count; - выводит текущее значение счетчика\r\n// increment; - увеличивает значение счетчика на 1\r\n// decrement; - уменьшает значение счетчика на 1\r\n// set current count; - принимает и присваивает значение счетчику\r\n// rest current count - устанавливает значение счетчика равным 0\r\n// все методы должны ссылаться на сам объект\r\n\r\n// Task 03\r\n// переделайте код из Task 02, что бы сработал следующий код:\r\n// counter.setCurrentCount(10).increment().increment().increment().decrement().getCurrentCount() // 12\r\n\r\n// Task 04\r\n// Написать функцию конструктор myFirstConstructorFunc которая принимает 2 параметра name и age и возвращает объект\r\n// у которого будут эти свойства и метод greeting из Task 01\r\n\r\n// Task 05 есть 2 объекта One и Two. С помощью bind и метода sayHello заставьте поздороваться объект One\r\n\r\nlet One = {name: 'One'};\r\nlet Two = {\r\n    name: 'Two', sayHello: function () {\r\n        console.log(`Hello, my name is ${this.name}`)\r\n    }\r\n};\r\n\r\n// Task 06\r\n// создайте объект helperObj у которого есть следующие методы:\r\n// changeName - меняет значение у свойства name объекта на полученное значение\r\n// setAge - устанавливает полученное значение в свойство age объекта\r\n// greeting - используется функция sayHello из Task 05\r\n// можно использовать @ts-ignore\r\n\r\n// Bind\r\n// 1) Дана функция sumTwoNumbers, реализовать функцию bindNumber которая принимает функцию sumTwoNumbers и число, и\r\n// возвращает другую функцию, которое также принимает число и возвращает сумму этих чисел. Замыкание использовать нельзя\r\nfunction sumTwoNumbers(a: number, b: number): number {\r\n    return a + b\r\n};\r\n\r\n// 2) Напишите функцию которая принимает первым аргументом объект One, а вторым helperObj. Данная функция\r\n// возвращает другую функцию которая принимает строку в качестве аргумента и устанавливает ее свойству name объекта One\r\n// 3) Одной строкой установить с помощью helperObj объекту Two поле age в значение 30\r\n// 4) Создать метод hi у объекта One, который всегда вызывает метод greeting объекта helperObj от имени Two\r\n\r\n// Реализовать задачи 2-4 из Bind с помощью Call\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};\r\n\r\n\r\n// let obj = { name: 'Chukcha'}\r\n// let obj2 = {\r\n//     name: 'Vasilisa',\r\n//     sayName(a: any, b: any) {\r\n//         console.log(`My name is ${this.name}. Arg1 = ${a} and Arg2 = ${b}`)\r\n//     }\r\n// }\r\n// // короткий вызов\r\n// obj2.sayName.bind(obj, 50)( 150)\r\n// let bindedFunction = obj2.sayName.bind(obj)\r\n// bindedFunction()\r\n\r\nlet obj = {name: 'Chukcha'}\r\nlet obj2 = {\r\n    name: 'Vasilisa',\r\n    sayName(method: any, a: any, b: any) {\r\n        console.log(`My name is ${this.name}. Method is ${method}. Arg1 = ${a} and Arg2 = ${b}`)\r\n    }\r\n}\r\n\r\nobj2.sayName.bind(obj)(\"bind\",1, 3)\r\nobj2.sayName.call(obj,\"call\", 10, 50)\r\nobj2.sayName.apply(obj, [\"apply\",200, 300])",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":33,"column":5,"nodeType":"37","messageId":"38","endLine":33,"endColumn":25},{"ruleId":"35","severity":1,"message":"39","line":57,"column":5,"nodeType":"37","messageId":"38","endLine":57,"endColumn":8},{"ruleId":"35","severity":1,"message":"40","line":58,"column":5,"nodeType":"37","messageId":"38","endLine":58,"endColumn":8},{"ruleId":"35","severity":1,"message":"41","line":74,"column":10,"nodeType":"37","messageId":"38","endLine":74,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":87,"column":1,"nodeType":"44","endLine":88,"endColumn":3},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"@typescript-eslint/no-unused-vars","'someObj' is assigned a value but never used.","Identifier","unusedVar","'One' is assigned a value but never used.","'Two' is assigned a value but never used.","'sumTwoNumbers' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]